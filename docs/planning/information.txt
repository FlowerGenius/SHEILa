//SHEILa======================================================================
// Name        : SHEILa_runtime.cpp
// Author      : Erin Penelope Lee
// Version     :
// Copyright   : Your copyright notice
// Description : Hello World in C++, Ansi-style
// Module	   :
// Created     :
// Modified    :
//============================================================================
SHEILa has a central memory storage, hosted on a linux server.

SHEILa maintains one personality, though any number of instances of this 
personality may be active simultaneously

An active SHEILa must include an active data bank, and one or more active 
SHEILa runtimes.

Any instance of the SHEILa runtime must have full access to this data bank.

Every instance of the SHEILa runtime must have full access to this data bank.
//============================================================================
EMOTIONALITY:

  Sheila has three levels of emotionality.
  
  1. The GLOBAL MOOD  is the collective conditions of all running 
  instances of the runtime 
  
  2. The INSTANCE MOOD  is the current condition of a single running instance 
  of the runtime 
  
  3. THE MEMORY MOOD is the emotion data hardcoded into a memory binary

  SHEILa understands her emotions in terms of 8 primary values, the relation
  of these values between their extremes and one another determine the
  exact feeling she has.
//============================================================================
The duties of a SHEILa instance are:

	1. To constantly be aware of the devices on it's platform and attempt to 
	connect to them.
	
	2. To constantly listen to the devices it has access to and record the
	information it captures in a standardized format.
	
	3. To use the output devices it has access to for communicating with the
	world beyond it's local platform.
	
	4. To register it's existence with the central server
	
	5. To register it's destruction with the central server
	
	6. To open and maintain a communication socket with the central server
	
	7. To Query the central server for program updates and implement them as
	soon as possible.
	
//============================================================================

If a class CLASS_NAME provides an interface for persistent data, it creates 
a folder at:

/usr/local/etc/SHEILa/entities/$CLASS_NAME

where each file in this folder is a parse friendly file describing a
unique instance of $CLASS_NAME to be created for the program where the name
of each file is its unique identifier, by default a positive integer.

the file format is as follows:

    @line1[Names]:${alias_0},...,${alias_n} //ex "AMD64","x64","x86_64","x86-64","Intel 64"
    @line2[Descriptions]:${desc_0},...,${desc_n}
    @line3[Pictures]:${picpath_0},...,${picpath_n}
    @line4[Videos]:${vidpath_0},...,${vidpath_n}
    @line5[Sounds]:${audpath_0},...,${audpath_n}
    @line6[Documents]:${docpath_0},...,${docpath_n}
    @line7[Programs]:${exepath_0},...,${exepath_n}
    @line8[Emotions]:${ang_val},${dis_val},...,${ant_val}
    @line9[CV Schema]:${schema_0},...,${schema_n}
    @line(x>9)[DATA]:${ENTITY_DATA}
   
If a new class CLASS_NAME is created, it creates:

{SHEILA_ROOT}/SHEILa/src/{CLASS_NAME}/{CLASS_NAME}.cpp
{SHEILA_ROOT}/SHEILa/src/{CLASS_NAME}/{CLASS_NAME}.h
 

//============================================================================


